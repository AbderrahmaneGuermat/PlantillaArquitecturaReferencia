apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: Plantilla-Arq-Referencia
  title: Plantilla de la arquitectura de Referencia
  description: base de referencia
  tags:
    - recommended
    - java
spec:
  owner: AbderrahmaneGuermat
  type: service

  parameters:
    - title: Rellena información básica
      required:
        - component_id
        - artifact_id
        - owner
      properties:
        component_id:
          title: Name
          type: string
          description: Identificador del proyecto ej. (com.miproyecto)
        artifact_id:
          title: Name
          type: string
          description: Identificador del artefacto del proyecto ej. (MiProyecto)
        owner:
          title: Owner
          type: string
          description: Creador del componente
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Elige dirección GitHub
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          description: ${{ parameters.description }}
          component_id: ${{ parameters.component_id }}
          artifact_id: ${{ parameters.artifact_id }}
          owner: ${{ parameters.owner }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          http_port: 8080

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    remoteUrl: ${{ steps.publish.output.remoteUrl }}
    entityRef: ${{ steps.register.output.entityRef }}
